---
:reek:
  :matches:
  - :file_path: lib/batboy.rb
    :code_smells:
    - :method: Batboy#report_slugging_percentage_roster_for
      :message: calls batter.stats_for_year(year) twice
      :type: DuplicateMethodCall
    - :method: Batboy#report_slugging_percentage_roster_for
      :message: calls batter.stats_for_year(year).slugging_percentage twice
      :type: DuplicateMethodCall
  - :file_path: lib/batter_csv_reader.rb
    :code_smells:
    - :method: BatterCsvReader
      :message: has no descriptive comment
      :type: IrresponsibleModule
  - :file_path: lib/batting_csv_reader.rb
    :code_smells:
    - :method: BattingCsvReader
      :message: has no descriptive comment
      :type: IrresponsibleModule
  - :file_path: lib/batting_data.rb
    :code_smells:
    - :method: BattingData#+
      :message: calls other.send(key) twice
      :type: DuplicateMethodCall
    - :method: BattingData#+
      :message: calls send(key) twice
      :type: DuplicateMethodCall
  - :file_path: lib/stats_grinder.rb
    :code_smells:
    - :method: StatsGrinder#batter_improvement
      :message: doesn't depend on instance state
      :type: UtilityFunction
    - :method: StatsGrinder#batter_improvement
      :message: refers to batter more than self
      :type: FeatureEnvy
    - :method: StatsGrinder#common_batters
      :message: doesn't depend on instance state
      :type: UtilityFunction
    - :method: StatsGrinder#common_batters
      :message: has the parameter name 'batters1'
      :type: UncommunicativeParameterName
    - :method: StatsGrinder#common_batters
      :message: has the parameter name 'batters2'
      :type: UncommunicativeParameterName
    - :method: StatsGrinder#common_batters
      :message: refers to batter more than self
      :type: FeatureEnvy
    - :method: StatsGrinder#common_batters
      :message: refers to batter2_ids more than self
      :type: FeatureEnvy
    - :method: StatsGrinder#common_batters
      :message: refers to batters1 more than self
      :type: FeatureEnvy
    - :method: StatsGrinder#common_batters
      :message: refers to batters2 more than self
      :type: FeatureEnvy
    - :method: StatsGrinder#most_improved
      :message: has the variable name 'b'
      :type: UncommunicativeVariableName
    - :method: StatsGrinder#most_improved_batter
      :message: has approx 6 statements
      :type: TooManyStatements
    - :method: StatsGrinder#most_improved_batter
      :message: has the variable name 'batters1'
      :type: UncommunicativeVariableName
    - :method: StatsGrinder#most_improved_batter
      :message: has the variable name 'batters2'
      :type: UncommunicativeVariableName
    - :method: StatsGrinder#triple_crown_winner_in_league_for
      :message: calls batter.stats_for_league_and_year(league, year) 4 times
      :type: DuplicateMethodCall
    - :method: StatsGrinder#triple_crown_winner_in_league_for
      :message: calls contenders.max_by 3 times
      :type: DuplicateMethodCall
    - :method: StatsGrinder#triple_crown_winner_in_league_for
      :message: doesn't depend on instance state
      :type: UtilityFunction
    - :method: StatsGrinder#triple_crown_winner_in_league_for
      :message: has approx 7 statements
      :type: TooManyStatements
    - :method: StatsGrinder#triple_crown_winner_in_league_for
      :message: refers to batter more than self
      :type: FeatureEnvy
    - :method: StatsGrinder#triple_crown_winner_in_league_for
      :message: refers to contenders more than self
      :type: FeatureEnvy
    - :method: StatsGrinder#with_at_least_200_at_bats
      :message: doesn't depend on instance state
      :type: UtilityFunction
    - :method: StatsGrinder#with_at_least_200_at_bats
      :message: refers to batter more than self
      :type: FeatureEnvy
    - :method: StatsGrinder#with_at_least_200_at_bats
      :message: refers to batters more than self
      :type: FeatureEnvy
:flog:
  :total: 202.6257450367409
  :average: 7.793297886028497
  :method_containers:
  - :name: Batboy
    :path: lib/batboy.rb
    :total_score: 55.441070389231
    :highest_score: 22.813154100211573
    :average_score: 9.240178398205167
    :methods:
      Batboy#report_slugging_percentage_roster_for:
        :operators:
          :ostream: 4.0
          :puts: 3.4000000000000004
          :assignment: 2.2
          :stats_grinder: 1.3
          :team_members_for_year: 1.1
          :branch: 2.2
          :sort_by: 1.1
          :stats_for_year: 3.4000000000000004
          :slugging_percentage: 3.0
          :-@: 1.2000000000000002
          :each: 1.1
          :name: 1.6
          :%: 1.4000000000000001
        :score: 22.813154100211573
        :path: lib/batboy.rb:44
      Batboy#report_most_improved_batter_in:
        :operators:
          :assignment: 4.4
          :lit_fixnum: 0.325
          :-: 1.1
          :ostream: 3.9000000000000004
          :puts: 3.3000000000000003
          :stats_grinder: 1.3
          :most_improved_batter: 1.1
          :name: 1.3
        :score: 13.086849315247731
        :path: lib/batboy.rb:36
      Batboy#report_triple_crown_winner_in_league_for:
        :operators:
          :ostream: 4.1000000000000005
          :puts: 3.5000000000000004
          :branch: 1.1
          :assignment: 1.1
          :stats_grinder: 1.3
          :triple_crown_winner_in_league_for: 1.1
          :name: 1.4000000000000001
        :score: 11.50565078559227
        :path: lib/batboy.rb:54
      Batboy#initialize:
        :operators:
          :assignment: 4.4
          :new: 1.1
        :score: 4.535416188179427
        :path: lib/batboy.rb:10
      Batboy#report_all_done:
        :operators:
          :ostream: 1.3
          :puts: 1.1
        :score: 2.4000000000000004
        :path: lib/batboy.rb:22
      Batboy#none:
        :operators:
          :private_attr_reader: 1.1
        :score: 1.1
        :path: 
  - :name: BattingData
    :path: lib/batting_data.rb
    :total_score: 69.91543221856169
    :highest_score: 22.731475974955963
    :average_score: 13.983086443712338
    :methods:
      BattingData#+:
        :operators:
          :assignment: 4.600000000000001
          :branch: 3.4000000000000012
          :each_with_object: 2.2000000000000006
          :send: 16.200000000000003
          :+: 1.2000000000000004
          :merge: 1.3000000000000003
          :new: 1.1000000000000003
        :score: 22.731475974955963
        :path: lib/batting_data.rb:30
      BattingData#slugging_percentage:
        :operators:
          :branch: 1.1
          :at_bats: 2.8000000000000003
          :>: 1.1
          :hits: 1.9000000000000001
          :doubles: 1.9000000000000001
          :+: 4.5
          :lit_fixnum: 0.9000000000000001
          :triples: 1.9000000000000001
          :*: 3.2
          :home_runs: 1.7000000000000002
          :to_f: 1.3000000000000003
          :/: 1.1000000000000003
        :score: 22.32711356176611
        :path: lib/batting_data.rb:23
      BattingData#initialize:
        :operators:
          :assignment: 6.6
          :fetch: 1.1
          :player_id: 1.3
          :find: 1.1
          :[]: 3.8000000000000003
          :branch: 1.1
          :each: 1.1
          :to_i: 1.4000000000000001
          :send: 3.6000000000000005
        :score: 14.97765001594042
        :path: lib/batting_data.rb:9
      BattingData#batting_average:
        :operators:
          :branch: 1.1
          :at_bats: 2.8
          :>: 1.1
          :hits: 1.3
          :to_f: 1.3
          :/: 1.1
        :score: 7.679192665899196
        :path: lib/batting_data.rb:18
      BattingData#none:
        :operators:
          :attr_reader: 1.1
          :private_attr_writer: 1.1
        :score: 2.2
        :path: 
  - :name: StatsGrinder
    :path: lib/stats_grinder.rb
    :total_score: 61.05797259172744
    :highest_score: 21.748160841781555
    :average_score: 7.63224657396593
    :methods:
      StatsGrinder#triple_crown_winner_in_league_for:
        :operators:
          :assignment: 4.400000000000002
          :find_all: 1.1000000000000005
          :branch: 6.600000000000003
          :reject!: 1.1000000000000005
          :stats_for_league_and_year: 5.800000000000002
          :at_bats: 1.4000000000000006
          :lit_fixnum: 0.35000000000000014
          :<: 1.2000000000000006
          :max_by: 3.3000000000000016
          :home_runs: 1.2000000000000006
          :runs_batted_in: 1.2000000000000006
          :batting_average: 1.2000000000000006
          :==: 2.4000000000000012
        :score: 21.748160841781555
        :path: lib/stats_grinder.rb:34
      StatsGrinder#common_batters:
        :operators:
          :assignment: 1.1000000000000005
          :block_pass: 1.3000000000000005
          :to_proc_normal: 1.3000000000000005
          :map: 1.1000000000000005
          :branch: 1.1000000000000005
          :reject: 1.1000000000000005
          :id: 1.6000000000000005
          :include?: 1.4000000000000006
          :!: 1.2000000000000006
        :score: 9.133454987024356
        :path: lib/stats_grinder.rb:97
      StatsGrinder#most_improved_batter:
        :operators:
          :assignment: 5.500000000000003
          :find_all: 2.200000000000001
          :with_at_least_200_at_bats: 2.200000000000001
          :common_batters: 1.1000000000000005
          :most_improved: 1.1000000000000005
        :score: 8.591274643497323
        :path: lib/stats_grinder.rb:16
      StatsGrinder#batter_improvement:
        :operators:
          :assignment: 4.400000000000002
          :stats_for_year: 2.600000000000001
          :batting_average: 2.200000000000001
          :-: 1.1000000000000005
        :score: 7.360027173862883
        :path: lib/stats_grinder.rb:85
      StatsGrinder#most_improved:
        :operators:
          :assignment: 1.1000000000000005
          :branch: 2.8000000000000007
          :map: 1.5000000000000004
          :batter_improvement: 1.6000000000000005
          :max_by: 1.3000000000000005
          :first: 1.1000000000000005
        :score: 6.268971207462994
        :path: lib/stats_grinder.rb:105
      StatsGrinder#with_at_least_200_at_bats:
        :operators:
          :branch: 1.1000000000000005
          :reject: 1.1000000000000005
          :stats_for_year: 1.6000000000000005
          :at_bats: 1.4000000000000006
          :lit_fixnum: 0.35000000000000014
          :<: 1.2000000000000006
        :score: 5.7560837380983285
        :path: lib/stats_grinder.rb:92
      StatsGrinder#team_members_for_year:
        :operators:
          :find_all: 1.1000000000000005
        :score: 1.1000000000000005
        :path: lib/stats_grinder.rb:30
      StatsGrinder#none:
        :operators:
          :private: 1.1000000000000005
        :score: 1.1000000000000005
        :path: 
  - :name: main
    :path: ''
    :total_score: 8.700000000000001
    :highest_score: 8.700000000000001
    :average_score: 8.700000000000001
    :methods:
      main#none:
        :operators:
          :require_relative: 6.500000000000001
          :require: 2.2
        :score: 8.700000000000001
        :path: 
  - :name: BatterCsvReader
    :path: lib/batter_csv_reader.rb
    :total_score: 3.7556349186104048
    :highest_score: 1.5556349186104046
    :average_score: 1.2518783062034682
    :methods:
      BatterCsvReader#data:
        :operators:
          :assignment: 1.1
          :read: 1.1
        :score: 1.5556349186104046
        :path: lib/batter_csv_reader.rb:12
      BatterCsvReader#all:
        :operators:
          :data: 1.1
        :score: 1.1
        :path: lib/batter_csv_reader.rb:8
      BatterCsvReader#initialize:
        :operators:
          :assignment: 1.1
        :score: 1.1
        :path: lib/batter_csv_reader.rb:4
  - :name: BattingCsvReader
    :path: lib/batting_csv_reader.rb
    :total_score: 3.7556349186104048
    :highest_score: 1.5556349186104046
    :average_score: 1.2518783062034682
    :methods:
      BattingCsvReader#data:
        :operators:
          :assignment: 1.1
          :read: 1.1
        :score: 1.5556349186104046
        :path: lib/batting_csv_reader.rb:12
      BattingCsvReader#initialize:
        :operators:
          :assignment: 1.1
        :score: 1.1
        :path: lib/batting_csv_reader.rb:4
      BattingCsvReader#all:
        :operators:
          :data: 1.1
        :score: 1.1
        :path: lib/batting_csv_reader.rb:8
:churn:
  :changes: []
  :class_churn:
  - klass:
      file: lib/batting_data.rb
      klass: BattingData
    times_changed: 1
  :method_churn:
  - method:
      file: lib/batting_data.rb
      klass: BattingData
      method: BattingData#initialize
    times_changed: 1
  - method:
      file: lib/batting_data.rb
      klass: BattingData
      method: BattingData#batting_average
    times_changed: 1
  - method:
      file: lib/batting_data.rb
      klass: BattingData
      method: BattingData#slugging_percentage
    times_changed: 1
  - method:
      file: lib/batting_data.rb
      klass: BattingData
      method: BattingData#+
    times_changed: 1
  :changed_files:
  - coverage/.last_run.json
  - coverage/.resultset.json
  - coverage/index.html
  - lib/batter.rb
  - spec/lib/batting_data_spec.rb
  :changed_classes: []
  :changed_methods: []
:saikuro:
  :files:
  - :classes:
    - :class_name: Batter
      :complexity: 42
      :lines: 218
      :methods:
      - :name: Batter#initialize
        :complexity: 4
        :lines: 9
      - :name: Batter#self.load_batter_data
        :complexity: 4
        :lines: 14
      - :name: Batter#self.find_all
        :complexity: 4
        :lines: 6
      - :name: Batter#self.load_batting_data
        :complexity: 3
        :lines: 9
      - :name: Batter#played_any_games_in_league_in_year?
        :complexity: 2
        :lines: 4
      - :name: Batter#all_batting_data_ever
        :complexity: 2
        :lines: 4
      - :name: Batter#all_batting_data_for_year
        :complexity: 2
        :lines: 4
      - :name: Batter#self.find_all_by_league_and_year
        :complexity: 2
        :lines: 4
      - :name: Batter#self.find_all_by_team_and_year
        :complexity: 2
        :lines: 4
      - :name: Batter#self.find_all_by_year
        :complexity: 2
        :lines: 2
      - :name: Batter#stats_for_league_and_year
        :complexity: 2
        :lines: 7
      - :name: Batter#played_any_games_for_team_in?
        :complexity: 2
        :lines: 4
      - :name: Batter#played_any_games_in?
        :complexity: 1
        :lines: 2
      - :name: Batter#self.batting_data_keys
        :complexity: 1
        :lines: 16
      - :name: Batter#add_batting_data
        :complexity: 1
        :lines: 2
      - :name: Batter#stats_for_year
        :complexity: 1
        :lines: 2
      - :name: Batter#years
        :complexity: 1
        :lines: 2
      - :name: Batter#sortable_name
        :complexity: 1
        :lines: 2
      - :name: Batter#name
        :complexity: 1
        :lines: 2
      - :name: Batter#self.batter_data
        :complexity: 1
        :lines: 2
      - :name: Batter#self.find
        :complexity: 1
        :lines: 2
      - :name: Batter#self.first
        :complexity: 1
        :lines: 2
      - :name: Batter#all_batting_data_for_league
        :complexity: 1
        :lines: 5
    :filename: lib/batter.rb
  - :classes:
    - :class_name: ''
      :complexity: 0
      :lines: 1
      :methods: []
    - :class_name: StatsGrinder
      :complexity: 16
      :lines: 95
      :methods:
      - :name: StatsGrinder#triple_crown_winner_in_league_for
        :complexity: 6
        :lines: 36
      - :name: StatsGrinder#most_improved
        :complexity: 3
        :lines: 4
      - :name: StatsGrinder#with_at_least_200_at_bats
        :complexity: 2
        :lines: 2
      - :name: StatsGrinder#common_batters
        :complexity: 2
        :lines: 3
      - :name: StatsGrinder#batter_improvement
        :complexity: 1
        :lines: 5
      - :name: StatsGrinder#team_members_for_year
        :complexity: 1
        :lines: 2
      - :name: StatsGrinder#most_improved_batter
        :complexity: 1
        :lines: 9
    :filename: lib/stats_grinder.rb
  - :classes:
    - :class_name: ''
      :complexity: 0
      :lines: 1
      :methods: []
    - :class_name: BattingData
      :complexity: 9
      :lines: 38
      :methods:
      - :name: BattingData#+
        :complexity: 3
        :lines: 12
      - :name: BattingData#slugging_percentage
        :complexity: 2
        :lines: 3
      - :name: BattingData#batting_average
        :complexity: 2
        :lines: 3
      - :name: BattingData#initialize
        :complexity: 2
        :lines: 7
    :filename: lib/batting_data.rb
  - :classes:
    - :class_name: ''
      :complexity: 0
      :lines: 1
      :methods: []
    - :class_name: Batboy
      :complexity: 8
      :lines: 55
      :methods:
      - :name: Batboy#report_slugging_percentage_roster_for
        :complexity: 3
        :lines: 8
      - :name: Batboy#report_triple_crown_winner_in_league_for
        :complexity: 2
        :lines: 7
      - :name: Batboy#report_most_improved_batter_in
        :complexity: 1
        :lines: 6
      - :name: Batboy#report_all_done
        :complexity: 1
        :lines: 2
      - :name: Batboy#initialize
        :complexity: 1
        :lines: 3
    :filename: lib/batboy.rb
  - :classes:
    - :class_name: BattingCsvReader
      :complexity: 3
      :lines: 12
      :methods:
      - :name: BattingCsvReader#data
        :complexity: 1
        :lines: 2
      - :name: BattingCsvReader#all
        :complexity: 1
        :lines: 2
      - :name: BattingCsvReader#initialize
        :complexity: 1
        :lines: 2
    :filename: lib/batting_csv_reader.rb
  - :classes:
    - :class_name: BatterCsvReader
      :complexity: 3
      :lines: 12
      :methods:
      - :name: BatterCsvReader#data
        :complexity: 1
        :lines: 2
      - :name: BatterCsvReader#all
        :complexity: 1
        :lines: 2
      - :name: BatterCsvReader#initialize
        :complexity: 1
        :lines: 2
    :filename: lib/batter_csv_reader.rb
  :classes:
  - :name: Batter
    :complexity: 42
    :lines: 218
    :defs:
    - :name: Batter#initialize
      :complexity: 4
      :lines: 9
    - :name: Batter#self.first
      :complexity: 1
      :lines: 2
    - :name: Batter#self.find
      :complexity: 1
      :lines: 2
    - :name: Batter#self.find_all
      :complexity: 4
      :lines: 6
    - :name: Batter#name
      :complexity: 1
      :lines: 2
    - :name: Batter#sortable_name
      :complexity: 1
      :lines: 2
    - :name: Batter#years
      :complexity: 1
      :lines: 2
    - :name: Batter#stats_for_year
      :complexity: 1
      :lines: 2
    - :name: Batter#stats_for_league_and_year
      :complexity: 2
      :lines: 7
    - :name: Batter#played_any_games_in?
      :complexity: 1
      :lines: 2
    - :name: Batter#played_any_games_for_team_in?
      :complexity: 2
      :lines: 4
    - :name: Batter#played_any_games_in_league_in_year?
      :complexity: 2
      :lines: 4
    - :name: Batter#add_batting_data
      :complexity: 1
      :lines: 2
    - :name: Batter#self.find_all_by_year
      :complexity: 2
      :lines: 2
    - :name: Batter#self.find_all_by_team_and_year
      :complexity: 2
      :lines: 4
    - :name: Batter#self.find_all_by_league_and_year
      :complexity: 2
      :lines: 4
    - :name: Batter#self.batter_data
      :complexity: 1
      :lines: 2
    - :name: Batter#self.load_batter_data
      :complexity: 4
      :lines: 14
    - :name: Batter#self.batting_data_keys
      :complexity: 1
      :lines: 16
    - :name: Batter#self.load_batting_data
      :complexity: 3
      :lines: 9
    - :name: Batter#all_batting_data_ever
      :complexity: 2
      :lines: 4
    - :name: Batter#all_batting_data_for_year
      :complexity: 2
      :lines: 4
    - :name: Batter#all_batting_data_for_league
      :complexity: 1
      :lines: 5
  - :name: StatsGrinder
    :complexity: 16
    :lines: 95
    :defs:
    - :name: StatsGrinder#most_improved_batter
      :complexity: 1
      :lines: 9
    - :name: StatsGrinder#team_members_for_year
      :complexity: 1
      :lines: 2
    - :name: StatsGrinder#triple_crown_winner_in_league_for
      :complexity: 6
      :lines: 36
    - :name: StatsGrinder#batter_improvement
      :complexity: 1
      :lines: 5
    - :name: StatsGrinder#with_at_least_200_at_bats
      :complexity: 2
      :lines: 2
    - :name: StatsGrinder#common_batters
      :complexity: 2
      :lines: 3
    - :name: StatsGrinder#most_improved
      :complexity: 3
      :lines: 4
  - :name: BattingData
    :complexity: 9
    :lines: 38
    :defs:
    - :name: BattingData#initialize
      :complexity: 2
      :lines: 7
    - :name: BattingData#batting_average
      :complexity: 2
      :lines: 3
    - :name: BattingData#slugging_percentage
      :complexity: 2
      :lines: 3
    - :name: BattingData#+
      :complexity: 3
      :lines: 12
  - :name: Batboy
    :complexity: 8
    :lines: 55
    :defs:
    - :name: Batboy#initialize
      :complexity: 1
      :lines: 3
    - :name: Batboy#report_all_done
      :complexity: 1
      :lines: 2
    - :name: Batboy#report_most_improved_batter_in
      :complexity: 1
      :lines: 6
    - :name: Batboy#report_slugging_percentage_roster_for
      :complexity: 3
      :lines: 8
    - :name: Batboy#report_triple_crown_winner_in_league_for
      :complexity: 2
      :lines: 7
  - :name: BatterCsvReader
    :complexity: 3
    :lines: 12
    :defs:
    - :name: BatterCsvReader#initialize
      :complexity: 1
      :lines: 2
    - :name: BatterCsvReader#all
      :complexity: 1
      :lines: 2
    - :name: BatterCsvReader#data
      :complexity: 1
      :lines: 2
  - :name: BattingCsvReader
    :complexity: 3
    :lines: 12
    :defs:
    - :name: BattingCsvReader#initialize
      :complexity: 1
      :lines: 2
    - :name: BattingCsvReader#all
      :complexity: 1
      :lines: 2
    - :name: BattingCsvReader#data
      :complexity: 1
      :lines: 2
  - :name: ''
    :complexity: 0
    :lines: 1
  - :name: ''
    :complexity: 0
    :lines: 1
  - :name: ''
    :complexity: 0
    :lines: 1
  :methods:
  - :name: StatsGrinder#triple_crown_winner_in_league_for
    :complexity: 6
    :lines: 36
  - :name: Batter#self.find_all
    :complexity: 4
    :lines: 6
  - :name: Batter#initialize
    :complexity: 4
    :lines: 9
  - :name: Batter#self.load_batter_data
    :complexity: 4
    :lines: 14
  - :name: Batter#self.load_batting_data
    :complexity: 3
    :lines: 9
  - :name: StatsGrinder#most_improved
    :complexity: 3
    :lines: 4
  - :name: BattingData#+
    :complexity: 3
    :lines: 12
  - :name: Batboy#report_slugging_percentage_roster_for
    :complexity: 3
    :lines: 8
  - :name: BattingData#slugging_percentage
    :complexity: 2
    :lines: 3
  - :name: Batter#self.find_all_by_league_and_year
    :complexity: 2
    :lines: 4
  - :name: Batter#played_any_games_for_team_in?
    :complexity: 2
    :lines: 4
  - :name: Batboy#report_triple_crown_winner_in_league_for
    :complexity: 2
    :lines: 7
  - :name: Batter#self.find_all_by_team_and_year
    :complexity: 2
    :lines: 4
  - :name: BattingData#batting_average
    :complexity: 2
    :lines: 3
  - :name: BattingData#initialize
    :complexity: 2
    :lines: 7
  - :name: Batter#self.find_all_by_year
    :complexity: 2
    :lines: 2
  - :name: StatsGrinder#common_batters
    :complexity: 2
    :lines: 3
  - :name: StatsGrinder#with_at_least_200_at_bats
    :complexity: 2
    :lines: 2
  - :name: Batter#played_any_games_in_league_in_year?
    :complexity: 2
    :lines: 4
  - :name: Batter#stats_for_league_and_year
    :complexity: 2
    :lines: 7
  - :name: Batter#all_batting_data_ever
    :complexity: 2
    :lines: 4
  - :name: Batter#all_batting_data_for_year
    :complexity: 2
    :lines: 4
  - :name: Batter#all_batting_data_for_league
    :complexity: 1
    :lines: 5
  - :name: StatsGrinder#most_improved_batter
    :complexity: 1
    :lines: 9
  - :name: StatsGrinder#team_members_for_year
    :complexity: 1
    :lines: 2
  - :name: StatsGrinder#batter_improvement
    :complexity: 1
    :lines: 5
  - :name: Batter#self.batting_data_keys
    :complexity: 1
    :lines: 16
  - :name: Batboy#initialize
    :complexity: 1
    :lines: 3
  - :name: Batter#self.batter_data
    :complexity: 1
    :lines: 2
  - :name: Batboy#report_all_done
    :complexity: 1
    :lines: 2
  - :name: Batboy#report_most_improved_batter_in
    :complexity: 1
    :lines: 6
  - :name: BattingCsvReader#initialize
    :complexity: 1
    :lines: 2
  - :name: Batter#add_batting_data
    :complexity: 1
    :lines: 2
  - :name: BattingCsvReader#all
    :complexity: 1
    :lines: 2
  - :name: BattingCsvReader#data
    :complexity: 1
    :lines: 2
  - :name: Batter#played_any_games_in?
    :complexity: 1
    :lines: 2
  - :name: BatterCsvReader#initialize
    :complexity: 1
    :lines: 2
  - :name: Batter#stats_for_year
    :complexity: 1
    :lines: 2
  - :name: Batter#years
    :complexity: 1
    :lines: 2
  - :name: Batter#sortable_name
    :complexity: 1
    :lines: 2
  - :name: Batter#name
    :complexity: 1
    :lines: 2
  - :name: BatterCsvReader#all
    :complexity: 1
    :lines: 2
  - :name: Batter#self.find
    :complexity: 1
    :lines: 2
  - :name: Batter#self.first
    :complexity: 1
    :lines: 2
  - :name: BatterCsvReader#data
    :complexity: 1
    :lines: 2
:stats:
  :codeLOC: 277
  :testLOC: 409
  :code_to_test_ratio: 1.5
  :lines:
  - :name: Libraries
    :lines: 470
    :loc: 277
    :classes: 6
    :methods: 37
    :methods_per_class: 6
    :loc_per_method: 5
  - :name: Bin specs
    :lines: 55
    :loc: 39
    :classes: 0
    :methods: 0
    :methods_per_class: 0
    :loc_per_method: 0
  - :name: Lib specs
    :lines: 480
    :loc: 370
    :classes: 0
    :methods: 1
    :methods_per_class: 0
    :loc_per_method: 368
  - :name: Total
    :lines: 1005
    :loc: 686
    :classes: 6
    :methods: 38
    :methods_per_class: 6
    :loc_per_method: 16
:flay:
  :total_score: '70'
  :matches:
  - :reason: 1) Similar code found in :class (mass = 38)
    :matches:
    - :name: lib/batter_csv_reader.rb
      :line: '3'
    - :name: lib/batting_csv_reader.rb
      :line: '3'
  - :reason: 2) Similar code found in :call (mass = 32)
    :matches:
    - :name: lib/batting_data.rb
      :line: '6'
    - :name: lib/batting_data.rb
      :line: '7'
:roodi:
  :total:
  - Checked 7 files
  :problems:
  - :file: lib/stats_grinder.rb
    :line: '34'
    :problem: Method "triple_crown_winner_in_league_for" has 32 lines.  It should
      have 20 or less.
:cane:
  :total_violations: 45
  :violations:
    :abc_complexity:
    - :file: lib/stats_grinder.rb
      :method: StatsGrinder#triple_crown_winner_in_league_for
      :complexity: '18'
    :line_style:
    - :line: lib/batting_data.rb:6
      :description: Line is >80 characters (170)
    - :line: lib/batting_data.rb:7
      :description: Line is >80 characters (178)
    - :line: lib/batting_data.rb:15
      :description: Line is >80 characters (151)
    - :line: lib/batting_data.rb:37
      :description: Line is >80 characters (142)
    - :line: lib/batboy.rb:47
      :description: Line is >80 characters (90)
    - :line: lib/batboy.rb:49
      :description: Line is >80 characters (97)
    - :line: lib/batter.rb:63
      :description: Line is >80 characters (102)
    - :line: lib/batter.rb:82
      :description: Line is >80 characters (83)
    - :line: lib/batter.rb:108
      :description: Line is >80 characters (85)
    - :line: lib/batter.rb:138
      :description: Line is >80 characters (95)
    - :line: spec/bin/stats_spec.rb:26
      :description: Line is >80 characters (83)
    - :line: spec/lib/batboy_spec.rb:56
      :description: Line is >80 characters (92)
    - :line: spec/lib/batboy_spec.rb:77
      :description: Line is >80 characters (94)
    - :line: spec/lib/batboy_spec.rb:89
      :description: Line is >80 characters (120)
    - :line: spec/lib/batboy_spec.rb:96
      :description: Line is >80 characters (123)
    - :line: spec/lib/batboy_spec.rb:102
      :description: Line is >80 characters (85)
    - :line: spec/lib/batboy_spec.rb:103
      :description: Line is >80 characters (83)
    - :line: spec/lib/batting_data_spec.rb:18
      :description: Line is >80 characters (85)
    - :line: spec/lib/batting_data_spec.rb:24
      :description: Line is >80 characters (86)
    - :line: spec/lib/batting_data_spec.rb:31
      :description: Line is >80 characters (124)
    - :line: spec/lib/batter_spec.rb:18
      :description: Line is >80 characters (82)
    - :line: spec/lib/batter_spec.rb:64
      :description: Line is >80 characters (83)
    - :line: spec/lib/batter_spec.rb:74
      :description: Line is >80 characters (96)
    - :line: spec/lib/batter_spec.rb:84
      :description: Line is >80 characters (92)
    - :line: spec/lib/batter_spec.rb:88
      :description: Line is >80 characters (104)
    - :line: spec/lib/batter_spec.rb:232
      :description: Line is >80 characters (81)
    - :line: spec/lib/stats_grinder_spec.rb:9
      :description: Line is >80 characters (85)
    - :line: spec/lib/stats_grinder_spec.rb:16
      :description: Line is >80 characters (85)
    - :line: spec/lib/stats_grinder_spec.rb:22
      :description: Line is >80 characters (93)
    - :line: spec/lib/stats_grinder_spec.rb:23
      :description: Line is >80 characters (176)
    - :line: spec/lib/stats_grinder_spec.rb:24
      :description: Line is >80 characters (197)
    - :line: spec/lib/stats_grinder_spec.rb:27
      :description: Line is >80 characters (91)
    - :line: spec/lib/stats_grinder_spec.rb:28
      :description: Line is >80 characters (84)
    - :line: spec/lib/stats_grinder_spec.rb:32
      :description: Line is >80 characters (121)
    - :line: spec/lib/stats_grinder_spec.rb:33
      :description: Line is >80 characters (84)
    - :line: spec/lib/stats_grinder_spec.rb:38
      :description: Line is >80 characters (174)
    - :line: spec/lib/stats_grinder_spec.rb:39
      :description: Line is >80 characters (180)
    - :line: spec/lib/stats_grinder_spec.rb:40
      :description: Line is >80 characters (177)
    - :line: spec/lib/stats_grinder_spec.rb:44
      :description: Line is >80 characters (91)
    - :line: spec/lib/stats_grinder_spec.rb:45
      :description: Line is >80 characters (81)
    :comment:
    - :line: lib/batting_csv_reader.rb:3
      :class_name: BattingCsvReader
    - :line: lib/batter_csv_reader.rb:3
      :class_name: BatterCsvReader
    - :line: lib/batboy.rb:7
      :class_name: Batboy
    - :line: lib/batter.rb:6
      :class_name: Batter
:hotspots:
  files:
  - location:
      class_name: 
      method_name: 
      file_path: lib/batting_data.rb:23
      file_name: lib/batting_data.rb
      line_number: '23'
      hash_key: '["lib/batting_data.rb:23", nil, nil]'
    details:
      flog: complexity is 22.3
      saikuro: complexity is 2.0
  - location:
      class_name: 
      method_name: 
      file_path: lib/batboy.rb:44
      file_name: lib/batboy.rb
      line_number: '44'
      hash_key: '["lib/batboy.rb:44", nil, nil]'
    details:
      flog: complexity is 22.8
  - location:
      class_name: 
      method_name: 
      file_path: lib/batting_data.rb:30
      file_name: lib/batting_data.rb
      line_number: '30'
      hash_key: '["lib/batting_data.rb:30", nil, nil]'
    details:
      flog: complexity is 22.7
  - location:
      class_name: 
      method_name: 
      file_path: lib/stats_grinder.rb:34
      file_name: lib/stats_grinder.rb
      line_number: '34'
      hash_key: '["lib/stats_grinder.rb:34", nil, nil]'
    details:
      flog: complexity is 21.7
  - location:
      class_name: 
      method_name: 
      file_path: lib/batting_data.rb:9
      file_name: lib/batting_data.rb
      line_number: '9'
      hash_key: '["lib/batting_data.rb:9", nil, nil]'
    details:
      flog: complexity is 15.0
      saikuro: complexity is 2.0
  - location:
      class_name: 
      method_name: 
      file_path: lib/batboy.rb:36
      file_name: lib/batboy.rb
      line_number: '36'
      hash_key: '["lib/batboy.rb:36", nil, nil]'
    details:
      flog: complexity is 13.1
      saikuro: complexity is 1.0
  - location:
      class_name: 
      method_name: 
      file_path: lib/batboy.rb:54
      file_name: lib/batboy.rb
      line_number: '54'
      hash_key: '["lib/batboy.rb:54", nil, nil]'
    details:
      flog: complexity is 11.5
      saikuro: complexity is 2.0
  - location:
      class_name: 
      method_name: 
      file_path: lib/batting_data.rb:18
      file_name: lib/batting_data.rb
      line_number: '18'
      hash_key: '["lib/batting_data.rb:18", nil, nil]'
    details:
      flog: complexity is 7.7
      saikuro: complexity is 2.0
  - location:
      class_name: 
      method_name: 
      file_path: lib/stats_grinder.rb:97
      file_name: lib/stats_grinder.rb
      line_number: '97'
      hash_key: '["lib/stats_grinder.rb:97", nil, nil]'
    details:
      flog: complexity is 9.1
  - location:
      class_name: 
      method_name: 
      file_path: lib/stats_grinder.rb:16
      file_name: lib/stats_grinder.rb
      line_number: '16'
      hash_key: '["lib/stats_grinder.rb:16", nil, nil]'
    details:
      flog: complexity is 8.6
  - location:
      class_name: 
      method_name: 
      file_path: lib/stats_grinder.rb:85
      file_name: lib/stats_grinder.rb
      line_number: '85'
      hash_key: '["lib/stats_grinder.rb:85", nil, nil]'
    details:
      flog: complexity is 7.4
  - location:
      class_name: 
      method_name: 
      file_path: lib/stats_grinder.rb:105
      file_name: lib/stats_grinder.rb
      line_number: '105'
      hash_key: '["lib/stats_grinder.rb:105", nil, nil]'
    details:
      flog: complexity is 6.3
  - location:
      class_name: 
      method_name: 
      file_path: lib/stats_grinder.rb:92
      file_name: lib/stats_grinder.rb
      line_number: '92'
      hash_key: '["lib/stats_grinder.rb:92", nil, nil]'
    details:
      flog: complexity is 5.8
  - location:
      class_name: 
      method_name: 
      file_path: lib/batboy.rb:10
      file_name: lib/batboy.rb
      line_number: '10'
      hash_key: '["lib/batboy.rb:10", nil, nil]'
    details:
      flog: complexity is 4.5
      saikuro: complexity is 1.0
  - location:
      class_name: 
      method_name: 
      file_path: lib/batting_data.rb
      file_name: lib/batting_data.rb
      line_number: 
      hash_key: '["lib/batting_data.rb", nil, nil]'
    details:
      reek: found 2 code smells
      saikuro: complexity is 3.0
      flay: found 1 code duplications
  - location:
      class_name: 
      method_name: 
      file_path: lib/batboy.rb:22
      file_name: lib/batboy.rb
      line_number: '22'
      hash_key: '["lib/batboy.rb:22", nil, nil]'
    details:
      flog: complexity is 2.4
      saikuro: complexity is 1.0
  - location:
      class_name: 
      method_name: 
      file_path: lib/batboy.rb
      file_name: lib/batboy.rb
      line_number: 
      hash_key: '["lib/batboy.rb", nil, nil]'
    details:
      reek: found 2 code smells
      saikuro: complexity is 3.0
  - location:
      class_name: 
      method_name: 
      file_path: lib/stats_grinder.rb
      file_name: lib/stats_grinder.rb
      line_number: 
      hash_key: '["lib/stats_grinder.rb", nil, nil]'
    details:
      reek: found 22 code smells
      saikuro: average complexity is 2.5
      roodi: found 1 design problems
  - location:
      class_name: 
      method_name: 
      file_path: lib/batting_csv_reader.rb:12
      file_name: lib/batting_csv_reader.rb
      line_number: '12'
      hash_key: '["lib/batting_csv_reader.rb:12", nil, nil]'
    details:
      flog: complexity is 1.6
      saikuro: complexity is 1.0
  - location:
      class_name: 
      method_name: 
      file_path: lib/batter_csv_reader.rb:12
      file_name: lib/batter_csv_reader.rb
      line_number: '12'
      hash_key: '["lib/batter_csv_reader.rb:12", nil, nil]'
    details:
      flog: complexity is 1.6
      saikuro: complexity is 1.0
  - location:
      class_name: 
      method_name: 
      file_path: lib/stats_grinder.rb:30
      file_name: lib/stats_grinder.rb
      line_number: '30'
      hash_key: '["lib/stats_grinder.rb:30", nil, nil]'
    details:
      flog: complexity is 1.1
      saikuro: complexity is 1.0
  - location:
      class_name: 
      method_name: 
      file_path: lib/batting_csv_reader.rb:4
      file_name: lib/batting_csv_reader.rb
      line_number: '4'
      hash_key: '["lib/batting_csv_reader.rb:4", nil, nil]'
    details:
      flog: complexity is 1.1
      saikuro: complexity is 1.0
  - location:
      class_name: 
      method_name: 
      file_path: lib/batting_csv_reader.rb:8
      file_name: lib/batting_csv_reader.rb
      line_number: '8'
      hash_key: '["lib/batting_csv_reader.rb:8", nil, nil]'
    details:
      flog: complexity is 1.1
      saikuro: complexity is 1.0
  - location:
      class_name: 
      method_name: 
      file_path: lib/batter_csv_reader.rb:4
      file_name: lib/batter_csv_reader.rb
      line_number: '4'
      hash_key: '["lib/batter_csv_reader.rb:4", nil, nil]'
    details:
      flog: complexity is 1.1
      saikuro: complexity is 1.0
  - location:
      class_name: 
      method_name: 
      file_path: lib/batter_csv_reader.rb:8
      file_name: lib/batter_csv_reader.rb
      line_number: '8'
      hash_key: '["lib/batter_csv_reader.rb:8", nil, nil]'
    details:
      flog: complexity is 1.1
      saikuro: complexity is 1.0
  - location:
      class_name: 
      method_name: 
      file_path: lib/batter.rb
      file_name: lib/batter.rb
      line_number: 
      hash_key: '["lib/batter.rb", nil, nil]'
    details:
      saikuro: average complexity is 1.8
  - location:
      class_name: 
      method_name: 
      file_path: lib/batter_csv_reader.rb
      file_name: lib/batter_csv_reader.rb
      line_number: 
      hash_key: '["lib/batter_csv_reader.rb", nil, nil]'
    details:
      reek: found 1 code smells
      flay: found 1 code duplications
  - location:
      class_name: 
      method_name: 
      file_path: lib/batting_csv_reader.rb
      file_name: lib/batting_csv_reader.rb
      line_number: 
      hash_key: '["lib/batting_csv_reader.rb", nil, nil]'
    details:
      reek: found 1 code smells
      flay: found 1 code duplications
  classes:
  - location:
      class_name: BattingData
      method_name: 
      file_path: lib/batting_data.rb
      file_name: lib/batting_data.rb
      line_number: 
      hash_key: '["lib/batting_data.rb", "BattingData", nil]'
    details:
      reek: found 2 code smells
      flog: average complexity is 14.0
      saikuro: average complexity is 2.2
  - location:
      class_name: Batboy
      method_name: 
      file_path: lib/batboy.rb
      file_name: lib/batboy.rb
      line_number: 
      hash_key: '["lib/batboy.rb", "Batboy", nil]'
    details:
      reek: found 2 code smells
      flog: average complexity is 9.2
      saikuro: average complexity is 1.6
  - location:
      class_name: StatsGrinder
      method_name: 
      file_path: lib/stats_grinder.rb
      file_name: lib/stats_grinder.rb
      line_number: 
      hash_key: '["lib/stats_grinder.rb", "StatsGrinder", nil]'
    details:
      reek: found 22 code smells
      flog: average complexity is 7.6
      saikuro: average complexity is 2.3
  - location:
      class_name: main
      method_name: 
      file_path: 
      file_name: 
      line_number: 
      hash_key: '[nil, "main", nil]'
    details:
      flog: complexity is 8.7
  - location:
      class_name: BatterCsvReader
      method_name: 
      file_path: lib/batter_csv_reader.rb
      file_name: lib/batter_csv_reader.rb
      line_number: 
      hash_key: '["lib/batter_csv_reader.rb", "BatterCsvReader", nil]'
    details:
      reek: found 1 code smells
      flog: average complexity is 1.3
      saikuro: average complexity is 1.0
  - location:
      class_name: BattingCsvReader
      method_name: 
      file_path: lib/batting_csv_reader.rb
      file_name: lib/batting_csv_reader.rb
      line_number: 
      hash_key: '["lib/batting_csv_reader.rb", "BattingCsvReader", nil]'
    details:
      reek: found 1 code smells
      flog: average complexity is 1.3
      saikuro: average complexity is 1.0
  - location:
      class_name: Batter
      method_name: 
      file_path: lib/batter.rb
      file_name: lib/batter.rb
      line_number: 
      hash_key: '["lib/batter.rb", "Batter", nil]'
    details:
      saikuro: average complexity is 1.8
  methods:
  - location:
      class_name: StatsGrinder
      method_name: StatsGrinder#triple_crown_winner_in_league_for
      file_path: lib/stats_grinder.rb
      file_name: lib/stats_grinder.rb
      line_number: 
      hash_key: '["lib/stats_grinder.rb", "StatsGrinder", "StatsGrinder#triple_crown_winner_in_league_for"]'
      simple_method_name: "#triple_crown_winner_in_league_for"
    details:
      reek: found 6 code smells
      flog: complexity is 21.7
      saikuro: complexity is 6.0
  - location:
      class_name: Batboy
      method_name: Batboy#report_slugging_percentage_roster_for
      file_path: lib/batboy.rb
      file_name: lib/batboy.rb
      line_number: 
      hash_key: '["lib/batboy.rb", "Batboy", "Batboy#report_slugging_percentage_roster_for"]'
      simple_method_name: "#report_slugging_percentage_roster_for"
    details:
      reek: found 2 code smells
      flog: complexity is 22.8
      saikuro: complexity is 3.0
  - location:
      class_name: BattingData
      method_name: BattingData#+
      file_path: lib/batting_data.rb
      file_name: lib/batting_data.rb
      line_number: 
      hash_key: '["lib/batting_data.rb", "BattingData", "BattingData#+"]'
      simple_method_name: "#+"
    details:
      reek: found 2 code smells
      flog: complexity is 22.7
      saikuro: complexity is 3.0
  - location:
      class_name: BattingData
      method_name: BattingData#slugging_percentage
      file_path: lib/batting_data.rb:23
      file_name: lib/batting_data.rb
      line_number: '23'
      hash_key: '["lib/batting_data.rb:23", "BattingData", "BattingData#slugging_percentage"]'
      simple_method_name: "#slugging_percentage"
    details:
      flog: complexity is 22.3
      saikuro: complexity is 2.0
  - location:
      class_name: BattingData
      method_name: BattingData#initialize
      file_path: lib/batting_data.rb:9
      file_name: lib/batting_data.rb
      line_number: '9'
      hash_key: '["lib/batting_data.rb:9", "BattingData", "BattingData#initialize"]'
      simple_method_name: "#initialize"
    details:
      flog: complexity is 15.0
      saikuro: complexity is 2.0
  - location:
      class_name: Batboy
      method_name: Batboy#report_most_improved_batter_in
      file_path: lib/batboy.rb:36
      file_name: lib/batboy.rb
      line_number: '36'
      hash_key: '["lib/batboy.rb:36", "Batboy", "Batboy#report_most_improved_batter_in"]'
      simple_method_name: "#report_most_improved_batter_in"
    details:
      flog: complexity is 13.1
      saikuro: complexity is 1.0
  - location:
      class_name: Batboy
      method_name: Batboy#report_triple_crown_winner_in_league_for
      file_path: lib/batboy.rb:54
      file_name: lib/batboy.rb
      line_number: '54'
      hash_key: '["lib/batboy.rb:54", "Batboy", "Batboy#report_triple_crown_winner_in_league_for"]'
      simple_method_name: "#report_triple_crown_winner_in_league_for"
    details:
      flog: complexity is 11.5
      saikuro: complexity is 2.0
  - location:
      class_name: StatsGrinder
      method_name: StatsGrinder#common_batters
      file_path: lib/stats_grinder.rb
      file_name: lib/stats_grinder.rb
      line_number: 
      hash_key: '["lib/stats_grinder.rb", "StatsGrinder", "StatsGrinder#common_batters"]'
      simple_method_name: "#common_batters"
    details:
      reek: found 7 code smells
      flog: complexity is 9.1
      saikuro: complexity is 2.0
  - location:
      class_name: StatsGrinder
      method_name: StatsGrinder#most_improved_batter
      file_path: lib/stats_grinder.rb
      file_name: lib/stats_grinder.rb
      line_number: 
      hash_key: '["lib/stats_grinder.rb", "StatsGrinder", "StatsGrinder#most_improved_batter"]'
      simple_method_name: "#most_improved_batter"
    details:
      reek: found 3 code smells
      flog: complexity is 8.6
      saikuro: complexity is 1.0
  - location:
      class_name: BattingData
      method_name: BattingData#batting_average
      file_path: lib/batting_data.rb:18
      file_name: lib/batting_data.rb
      line_number: '18'
      hash_key: '["lib/batting_data.rb:18", "BattingData", "BattingData#batting_average"]'
      simple_method_name: "#batting_average"
    details:
      flog: complexity is 7.7
      saikuro: complexity is 2.0
  - location:
      class_name: StatsGrinder
      method_name: StatsGrinder#most_improved
      file_path: lib/stats_grinder.rb
      file_name: lib/stats_grinder.rb
      line_number: 
      hash_key: '["lib/stats_grinder.rb", "StatsGrinder", "StatsGrinder#most_improved"]'
      simple_method_name: "#most_improved"
    details:
      reek: found 1 code smells
      flog: complexity is 6.3
      saikuro: complexity is 3.0
  - location:
      class_name: StatsGrinder
      method_name: StatsGrinder#batter_improvement
      file_path: lib/stats_grinder.rb
      file_name: lib/stats_grinder.rb
      line_number: 
      hash_key: '["lib/stats_grinder.rb", "StatsGrinder", "StatsGrinder#batter_improvement"]'
      simple_method_name: "#batter_improvement"
    details:
      reek: found 2 code smells
      flog: complexity is 7.4
      saikuro: complexity is 1.0
  - location:
      class_name: main
      method_name: main#none
      file_path: 
      file_name: 
      line_number: 
      hash_key: '[nil, "main", "main#none"]'
      simple_method_name: "#none"
    details:
      flog: complexity is 8.7
  - location:
      class_name: StatsGrinder
      method_name: StatsGrinder#with_at_least_200_at_bats
      file_path: lib/stats_grinder.rb
      file_name: lib/stats_grinder.rb
      line_number: 
      hash_key: '["lib/stats_grinder.rb", "StatsGrinder", "StatsGrinder#with_at_least_200_at_bats"]'
      simple_method_name: "#with_at_least_200_at_bats"
    details:
      reek: found 3 code smells
      flog: complexity is 5.8
      saikuro: complexity is 2.0
  - location:
      class_name: Batboy
      method_name: Batboy#initialize
      file_path: lib/batboy.rb:10
      file_name: lib/batboy.rb
      line_number: '10'
      hash_key: '["lib/batboy.rb:10", "Batboy", "Batboy#initialize"]'
      simple_method_name: "#initialize"
    details:
      flog: complexity is 4.5
      saikuro: complexity is 1.0
  - location:
      class_name: Batter
      method_name: Batter#self.load_batter_data
      file_path: lib/batter.rb
      file_name: lib/batter.rb
      line_number: 
      hash_key: '["lib/batter.rb", "Batter", "Batter#self.load_batter_data"]'
      simple_method_name: "#self.load_batter_data"
    details:
      saikuro: complexity is 4.0
  - location:
      class_name: Batter
      method_name: Batter#self.find_all
      file_path: lib/batter.rb
      file_name: lib/batter.rb
      line_number: 
      hash_key: '["lib/batter.rb", "Batter", "Batter#self.find_all"]'
      simple_method_name: "#self.find_all"
    details:
      saikuro: complexity is 4.0
  - location:
      class_name: Batter
      method_name: Batter#initialize
      file_path: lib/batter.rb
      file_name: lib/batter.rb
      line_number: 
      hash_key: '["lib/batter.rb", "Batter", "Batter#initialize"]'
      simple_method_name: "#initialize"
    details:
      saikuro: complexity is 4.0
  - location:
      class_name: Batboy
      method_name: Batboy#report_all_done
      file_path: lib/batboy.rb:22
      file_name: lib/batboy.rb
      line_number: '22'
      hash_key: '["lib/batboy.rb:22", "Batboy", "Batboy#report_all_done"]'
      simple_method_name: "#report_all_done"
    details:
      flog: complexity is 2.4
      saikuro: complexity is 1.0
  - location:
      class_name: Batter
      method_name: Batter#self.load_batting_data
      file_path: lib/batter.rb
      file_name: lib/batter.rb
      line_number: 
      hash_key: '["lib/batter.rb", "Batter", "Batter#self.load_batting_data"]'
      simple_method_name: "#self.load_batting_data"
    details:
      saikuro: complexity is 3.0
  - location:
      class_name: BatterCsvReader
      method_name: BatterCsvReader#data
      file_path: lib/batter_csv_reader.rb:12
      file_name: lib/batter_csv_reader.rb
      line_number: '12'
      hash_key: '["lib/batter_csv_reader.rb:12", "BatterCsvReader", "BatterCsvReader#data"]'
      simple_method_name: "#data"
    details:
      flog: complexity is 1.6
      saikuro: complexity is 1.0
  - location:
      class_name: BattingCsvReader
      method_name: BattingCsvReader#data
      file_path: lib/batting_csv_reader.rb:12
      file_name: lib/batting_csv_reader.rb
      line_number: '12'
      hash_key: '["lib/batting_csv_reader.rb:12", "BattingCsvReader", "BattingCsvReader#data"]'
      simple_method_name: "#data"
    details:
      flog: complexity is 1.6
      saikuro: complexity is 1.0
  - location:
      class_name: BattingData
      method_name: BattingData#none
      file_path: 
      file_name: 
      line_number: 
      hash_key: '[nil, "BattingData", "BattingData#none"]'
      simple_method_name: "#none"
    details:
      flog: complexity is 2.2
  - location:
      class_name: StatsGrinder
      method_name: StatsGrinder#team_members_for_year
      file_path: lib/stats_grinder.rb:30
      file_name: lib/stats_grinder.rb
      line_number: '30'
      hash_key: '["lib/stats_grinder.rb:30", "StatsGrinder", "StatsGrinder#team_members_for_year"]'
      simple_method_name: "#team_members_for_year"
    details:
      flog: complexity is 1.1
      saikuro: complexity is 1.0
  - location:
      class_name: BatterCsvReader
      method_name: BatterCsvReader#all
      file_path: lib/batter_csv_reader.rb:8
      file_name: lib/batter_csv_reader.rb
      line_number: '8'
      hash_key: '["lib/batter_csv_reader.rb:8", "BatterCsvReader", "BatterCsvReader#all"]'
      simple_method_name: "#all"
    details:
      flog: complexity is 1.1
      saikuro: complexity is 1.0
  - location:
      class_name: BattingCsvReader
      method_name: BattingCsvReader#all
      file_path: lib/batting_csv_reader.rb:8
      file_name: lib/batting_csv_reader.rb
      line_number: '8'
      hash_key: '["lib/batting_csv_reader.rb:8", "BattingCsvReader", "BattingCsvReader#all"]'
      simple_method_name: "#all"
    details:
      flog: complexity is 1.1
      saikuro: complexity is 1.0
  - location:
      class_name: BatterCsvReader
      method_name: BatterCsvReader#initialize
      file_path: lib/batter_csv_reader.rb:4
      file_name: lib/batter_csv_reader.rb
      line_number: '4'
      hash_key: '["lib/batter_csv_reader.rb:4", "BatterCsvReader", "BatterCsvReader#initialize"]'
      simple_method_name: "#initialize"
    details:
      flog: complexity is 1.1
      saikuro: complexity is 1.0
  - location:
      class_name: BattingCsvReader
      method_name: BattingCsvReader#initialize
      file_path: lib/batting_csv_reader.rb:4
      file_name: lib/batting_csv_reader.rb
      line_number: '4'
      hash_key: '["lib/batting_csv_reader.rb:4", "BattingCsvReader", "BattingCsvReader#initialize"]'
      simple_method_name: "#initialize"
    details:
      flog: complexity is 1.1
      saikuro: complexity is 1.0
  - location:
      class_name: Batter
      method_name: Batter#played_any_games_for_team_in?
      file_path: lib/batter.rb
      file_name: lib/batter.rb
      line_number: 
      hash_key: '["lib/batter.rb", "Batter", "Batter#played_any_games_for_team_in?"]'
      simple_method_name: "#played_any_games_for_team_in?"
    details:
      saikuro: complexity is 2.0
  - location:
      class_name: Batter
      method_name: Batter#stats_for_league_and_year
      file_path: lib/batter.rb
      file_name: lib/batter.rb
      line_number: 
      hash_key: '["lib/batter.rb", "Batter", "Batter#stats_for_league_and_year"]'
      simple_method_name: "#stats_for_league_and_year"
    details:
      saikuro: complexity is 2.0
  - location:
      class_name: Batter
      method_name: Batter#played_any_games_in_league_in_year?
      file_path: lib/batter.rb
      file_name: lib/batter.rb
      line_number: 
      hash_key: '["lib/batter.rb", "Batter", "Batter#played_any_games_in_league_in_year?"]'
      simple_method_name: "#played_any_games_in_league_in_year?"
    details:
      saikuro: complexity is 2.0
  - location:
      class_name: Batter
      method_name: Batter#all_batting_data_ever
      file_path: lib/batter.rb
      file_name: lib/batter.rb
      line_number: 
      hash_key: '["lib/batter.rb", "Batter", "Batter#all_batting_data_ever"]'
      simple_method_name: "#all_batting_data_ever"
    details:
      saikuro: complexity is 2.0
  - location:
      class_name: Batter
      method_name: Batter#all_batting_data_for_year
      file_path: lib/batter.rb
      file_name: lib/batter.rb
      line_number: 
      hash_key: '["lib/batter.rb", "Batter", "Batter#all_batting_data_for_year"]'
      simple_method_name: "#all_batting_data_for_year"
    details:
      saikuro: complexity is 2.0
  - location:
      class_name: Batter
      method_name: Batter#self.find_all_by_year
      file_path: lib/batter.rb
      file_name: lib/batter.rb
      line_number: 
      hash_key: '["lib/batter.rb", "Batter", "Batter#self.find_all_by_year"]'
      simple_method_name: "#self.find_all_by_year"
    details:
      saikuro: complexity is 2.0
  - location:
      class_name: Batter
      method_name: Batter#self.find_all_by_team_and_year
      file_path: lib/batter.rb
      file_name: lib/batter.rb
      line_number: 
      hash_key: '["lib/batter.rb", "Batter", "Batter#self.find_all_by_team_and_year"]'
      simple_method_name: "#self.find_all_by_team_and_year"
    details:
      saikuro: complexity is 2.0
  - location:
      class_name: Batter
      method_name: Batter#self.find_all_by_league_and_year
      file_path: lib/batter.rb
      file_name: lib/batter.rb
      line_number: 
      hash_key: '["lib/batter.rb", "Batter", "Batter#self.find_all_by_league_and_year"]'
      simple_method_name: "#self.find_all_by_league_and_year"
    details:
      saikuro: complexity is 2.0
  - location:
      class_name: StatsGrinder
      method_name: StatsGrinder#none
      file_path: 
      file_name: 
      line_number: 
      hash_key: '[nil, "StatsGrinder", "StatsGrinder#none"]'
      simple_method_name: "#none"
    details:
      flog: complexity is 1.1
  - location:
      class_name: Batboy
      method_name: Batboy#none
      file_path: 
      file_name: 
      line_number: 
      hash_key: '[nil, "Batboy", "Batboy#none"]'
      simple_method_name: "#none"
    details:
      flog: complexity is 1.1
  - location:
      class_name: Batter
      method_name: Batter#played_any_games_in?
      file_path: lib/batter.rb
      file_name: lib/batter.rb
      line_number: 
      hash_key: '["lib/batter.rb", "Batter", "Batter#played_any_games_in?"]'
      simple_method_name: "#played_any_games_in?"
    details:
      saikuro: complexity is 1.0
  - location:
      class_name: Batter
      method_name: Batter#self.batting_data_keys
      file_path: lib/batter.rb
      file_name: lib/batter.rb
      line_number: 
      hash_key: '["lib/batter.rb", "Batter", "Batter#self.batting_data_keys"]'
      simple_method_name: "#self.batting_data_keys"
    details:
      saikuro: complexity is 1.0
  - location:
      class_name: Batter
      method_name: Batter#add_batting_data
      file_path: lib/batter.rb
      file_name: lib/batter.rb
      line_number: 
      hash_key: '["lib/batter.rb", "Batter", "Batter#add_batting_data"]'
      simple_method_name: "#add_batting_data"
    details:
      saikuro: complexity is 1.0
  - location:
      class_name: Batter
      method_name: Batter#stats_for_year
      file_path: lib/batter.rb
      file_name: lib/batter.rb
      line_number: 
      hash_key: '["lib/batter.rb", "Batter", "Batter#stats_for_year"]'
      simple_method_name: "#stats_for_year"
    details:
      saikuro: complexity is 1.0
  - location:
      class_name: Batter
      method_name: Batter#years
      file_path: lib/batter.rb
      file_name: lib/batter.rb
      line_number: 
      hash_key: '["lib/batter.rb", "Batter", "Batter#years"]'
      simple_method_name: "#years"
    details:
      saikuro: complexity is 1.0
  - location:
      class_name: Batter
      method_name: Batter#sortable_name
      file_path: lib/batter.rb
      file_name: lib/batter.rb
      line_number: 
      hash_key: '["lib/batter.rb", "Batter", "Batter#sortable_name"]'
      simple_method_name: "#sortable_name"
    details:
      saikuro: complexity is 1.0
  - location:
      class_name: Batter
      method_name: Batter#name
      file_path: lib/batter.rb
      file_name: lib/batter.rb
      line_number: 
      hash_key: '["lib/batter.rb", "Batter", "Batter#name"]'
      simple_method_name: "#name"
    details:
      saikuro: complexity is 1.0
  - location:
      class_name: Batter
      method_name: Batter#self.batter_data
      file_path: lib/batter.rb
      file_name: lib/batter.rb
      line_number: 
      hash_key: '["lib/batter.rb", "Batter", "Batter#self.batter_data"]'
      simple_method_name: "#self.batter_data"
    details:
      saikuro: complexity is 1.0
  - location:
      class_name: Batter
      method_name: Batter#self.find
      file_path: lib/batter.rb
      file_name: lib/batter.rb
      line_number: 
      hash_key: '["lib/batter.rb", "Batter", "Batter#self.find"]'
      simple_method_name: "#self.find"
    details:
      saikuro: complexity is 1.0
  - location:
      class_name: Batter
      method_name: Batter#self.first
      file_path: lib/batter.rb
      file_name: lib/batter.rb
      line_number: 
      hash_key: '["lib/batter.rb", "Batter", "Batter#self.first"]'
      simple_method_name: "#self.first"
    details:
      saikuro: complexity is 1.0
  - location:
      class_name: Batter
      method_name: Batter#all_batting_data_for_league
      file_path: lib/batter.rb
      file_name: lib/batter.rb
      line_number: 
      hash_key: '["lib/batter.rb", "Batter", "Batter#all_batting_data_for_league"]'
      simple_method_name: "#all_batting_data_for_league"
    details:
      saikuro: complexity is 1.0
